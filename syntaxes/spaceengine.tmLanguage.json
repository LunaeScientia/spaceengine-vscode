{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "SpaceEngine Script",
    "scopeName": "source.se",
    "patterns": [
        {"include": "#comment"},
        {"include": "#string"},
        {"include": "#number"},
        {"include": "#boolean"},
        {"include": "#paren-expr"},
        {"include": "#expr-scenario"},
        {"include": "#expr-catalog-root"},
        {"include": "#expr-common"}
    ],
    "repository": {
        "comment": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.se",
                    "match": "//.*"
                },
                {
                    "name": "comment.block.se",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "string": {
            "name": "string.quoted.double.se",
            "begin": "\"",
            "end": "\"",
            "patterns": [{
                "name": "constant.character.escape.se",
                "match": "\\\\."
            }]
        },
        "number": {
            "patterns": [
                {"include": "#hexadecimal"},
                {"include": "#decimal"}
            ],
            "repository": {
                "hexadecimal": {
                    "name": "constant.numeric.se",
                    "match": "[+-]\\h+"
                },
                "decimal": {
                    "name": "constant.numeric.se",
                    "match": "[+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:(?:[eE][+-]?\\d+)|(?:\\*10\\^[+-]?\\d+))?"
                }
            }
        },
        "boolean": {
            "patterns": [
                {
                    "name": "constant.language.boolean.true.se",
                    "match": "\\b(true)\\b"
                },
                {
                    "name": "constant.language.boolean.false.se",
                    "match": "\\b(false)\\b"
                }
            ]
        },
        "paren-expr": {
            "patterns": [
                {
                    "name": "meta.block.se",
                    "begin": "\\{|\\(",
                    "end": "\\}|\\)",
                    "beginCaptures": {
                        "0": {"name": "punctuation.paren.open.se"}
                    },
                    "endCaptures": {
                        "0": {"name": "punctuation.paren.close.se"}
                    },
                    "patterns": [
                        {"include": "#comment"},
                        {
                            "name": "punctuation.separator.se",
                            "match": ","
                        },
                        {"include": "#string"},
                        {"include": "#number"},
                        {"include": "#boolean"},
                        {"include": "#paren-expr"},
                        {"include": "#expr-scenario"},
                        {"include": "#expr-catalog-param"},
                        {"include": "#expr-common"}
                    ]
                }
            ]
        },
        "expr-scenario": {
            "patterns": [
                {"include": "#control"},
                {"include": "#keyword"},
                {"include": "#function"}
            ],
            "repository": {
                "control": {
                    "match": "(\\S+)\\s*(\\{)\\s*(\\S+)\\s*(==|!=|<|>|<=|>=)\\s*(\\S+)\\s*(\\})",
                    "captures": {
                        "1": {"patterns": [{"include": "#keyword"}]},
                        "2": {"name": "punctuation.paren.open.se"},
                        "3": {"name": "variable.parameter.se"},
                        "4": {"name": "keyword.operator.se"},
                        "5": {"patterns": [
                            {"include": "#string"},
                            {"include": "#number"},
                            {"include": "#boolean"}
                        ]},
                        "6": {"name": "punctuation.paren.close.se"}
                    }
                },
                "keyword": {
                    "patterns": [
                        {
                            "name": "keyword.control.conditional.se",
                            "match": "\\b(if|elif|else|endif)\\b"
                        },
                        {
                            "name": "keyword.control.loop.se",
                            "match": "\\b(Loop|EndLoop)\\b"
                        },
                        {
                            "name": "keyword.control.flow.se",
                            "match": "\\b(Break)\\b"
                        }
                    ]
                },
                "function": {
                    "patterns": [
                        {
                            "name": "entity.name.function.se",
                            "match": "\\b(BeginMultiTrigger|BeginMultitrigger|Break|Button|Center|CheckVersion|ClearSplinePaths|ClearWaypoints|CloseMenu|dbSort|DebugGen|DeleteSplinePath|DeleteWaypoint|Edit|EndMultitrigger|EnterPlanetarium|EnterSinglePlayer|Exit|FadeIn|FadeOut|Fly|Follow|FOV|Free|Get|Goto|GotoLocation|GotoURL|Hide|HideAllDialogs|HideAllToolbars|HideDialog|HideMessage|HidePrint|HighlightWidget|Horizon|Interpolate|Label|Map|Menu|MoveMode|OpenMenu|OptimizeSM|PauseMusic|PlayMusic|PlaySplinePath|Print|PrintFont|PrintNames|PrintTexCacheLog|PrintVars|Quit|Rebuild|ReloadConstellations|Reset|RestoreVars|ResumeMusic|Run|SaveDDS|SaveJPG|SavePNG|SaveTGA|SaveTIF|SaveVars|Scene|Screenshot|Select|SessionContinue|Set|SetForce|SetU|SetWidgetStyle|Show|ShowDialog|ShowMessage|Speed|SpeedKm|SplinePath|StarBrowserReset|StartTime|StopFly|StopOrbit|StopTime|StopTurn|TimeScale|Track|Turn|Unselect|Untrack|UserMoveControl|UserTimeControl|Wait|WaitMessage|WaitTrigger|WaitVar|Watermark|Waypoint)\\b"
                        }
                    ]
                }
            }
        },
        "expr-catalog-root": {
            "patterns": [
                {
                    "name": "entity.name.function.se",
                    "match": "\\b(Asteroid|Barycenter|Cluster|Comet|DwarfMoon|DwarfPlanet|Galaxy|Moon|Nebula|Planet|Quasar|Spacecraft|Star|StarBarycenter)\\b"
                }
            ]
        },
        "expr-catalog-param": {
            "patterns": [
                {
                    "name": "entity.name.function.se",
                    "match": "\\b(AccretionDisk|Atmosphere|Aurora|Clouds|CometTail|Composition|Corona|Interior|Lava|Life|Ocean|Orbit|PeriodicTermsDiurnal|PeriodicTermsSecular|Rings|RotationModel|Surface)\\b"
                }
            ]
        },
        "expr-common": {
            "patterns": [
                {"include": "#variable"},
                {"include": "#function"}
            ],
            "repository": {
                "variable": {
                    "name": "storage.type.var.se",
                    "match": "(\\S+)\\s+(?=[^\\{\\}]+)"
                },
                "function": {
                    "name": "entity.name.function.se",
                    "match": "[a-zA-Z0-9]+"
                }
            }
        }
    }
}